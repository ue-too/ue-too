name:  Publish to NPM
permissions:
  contents: write
  

on:
  workflow_dispatch:
    inputs:
        version-type:
          type: choice
          description: Bump Version
          options: 
          - major
          - minor
          - patch
        dry-run:
          type: boolean
          description: Perform a dry run without actually publishing
          default: false

jobs:
  release-package:
    runs-on: ubuntu-latest
    name: Publish Package to npmjs
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/version')
    steps:
      - name: Fail if branch is not main
        if: (github.event_name == 'workflow_dispatch' && (github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/heads/version')))
        run: |
          echo "This workflow should not be triggered with workflow_dispatch on a branch other than main"
          exit 1
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          scope: '@ue-too'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - uses: pnpm/action-setup@v3
        with:
          version: 10
      - name: Install dependencies
        run: |
          if [ -f pnpm-lock.yaml ]; then
            pnpm install --frozen-lockfile || pnpm install
          else
            pnpm install
          fi
      - name: Build packages
        run: pnpm build

      - name: Setup git user
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "vntchang@gmail.com"
      - name: Bump version
        run: |
          if [[ ${{ github.event.inputs.version-type }} == 'patch' ]]; then
            pnpm bump-version ${{ github.event.inputs.dry-run == 'true' && '--dry-run' || '' }} --specifier patch
          elif [[ ${{ github.event.inputs.version-type }} == 'minor' ]]; then
            pnpm bump-version ${{ github.event.inputs.dry-run == 'true' && '--dry-run' || '' }} --specifier minor
          elif [[ ${{ github.event.inputs.version-type }} == 'major' ]]; then
            pnpm bump-version ${{ github.event.inputs.dry-run == 'true' && '--dry-run' || '' }} --specifier major
          fi
      - name: Move package.json to dist
        run: pnpm move-packageJson
      - name: Replace workspace deps
        run: pnpm replace-workspace-deps
      - name: Publish packages
        run: pnpm publish-packages ${{ github.event.inputs.dry-run == 'true' && '--dry-run' || '' }}
      - name: Log git log
        run: git log -1 --pretty | cat
      - name: Push to branch
        if: ${{ github.event.inputs.dry-run != 'true' }}
        run: git push
      # - name: Determine release branch
      #   id: get-branch
      #   if: ${{ github.event.inputs.dry-run != 'true' }}
      #   run: |
      #     echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
      # - name: Create release
      #   if: ${{ github.event.inputs.dry-run != 'true' }}
      #   env:
      #     GH_TOKEN: ${{ secrets.PAT }}
      #     tag: v${{ steps.get-version.outputs.version }}
      #   run: |
      #     gh release create "$tag" \
      #         --repo="$GITHUB_REPOSITORY" \
      #         --title="${GITHUB_REPOSITORY#*/} ${{ steps.get-version.outputs.version }}" \
      #         --target="${{ steps.get-branch.outputs.branch }}" \
      #         --generate-notes
      #         # Upload dist files from all packages
      #         for package_dir in packages/*/; do
      #           if [ -d "${package_dir}dist" ]; then
      #             for file in "${package_dir}dist"/*; do
      #               if [ -f "$file" ]; then
      #                 gh release upload "$tag" "$file" --repo="$GITHUB_REPOSITORY"
      #               fi
      #             done
      #           fi
      #         done
